# Generated by Django 3.2.8 on 2021-11-25 10:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('author_type', models.CharField(default='author', max_length=30)),
                ('displayName', models.CharField(default='', max_length=30)),
                ('host', models.CharField(max_length=50)),
                ('url', models.CharField(blank=True, default='', max_length=100000, null=True)),
                ('github', models.CharField(max_length=50, null=True)),
                ('profileImage', models.ImageField(blank=True, default='user.jpg', null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('inbox_type', models.CharField(default='', max_length=100)),
                ('inbox_author_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False)),
                ('items', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.URLField(default='', verbose_name='@context')),
                ('summary', models.CharField(default='', max_length=100)),
                ('type', models.CharField(default='', max_length=100)),
                ('object', models.URLField()),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='authors_list_lalal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('type', models.CharField(default='', max_length=100, verbose_name='type')),
                ('title', models.CharField(default='', max_length=100)),
                ('source', models.URLField(default='')),
                ('origin', models.URLField(default='')),
                ('description', models.TextField(default='')),
                ('contentType', models.CharField(choices=[('text/markdown', 'Markdown'), ('text/plain', 'Plain'), ('application/base64', 'Application'), ('image/png;base64', 'Image Png'), ('image/jpeg;base64', 'Image Jpeg')], default='text/plain', max_length=20)),
                ('content', models.TextField(blank=True)),
                ('comments', models.URLField()),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('FRIENDS', 'Friendonly')], default='PUBLIC', max_length=20)),
                ('unlisted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Liked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=100)),
                ('items', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='liked_detail', to='authors.like')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(default='', max_length=50)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actor', to=settings.AUTH_USER_MODEL)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='object', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('author_id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('author_type', models.CharField(default='author', max_length=30)),
                ('displayName', models.CharField(default='', max_length=30)),
                ('host', models.CharField(max_length=50)),
                ('url', models.CharField(blank=True, default='', max_length=100000, null=True)),
                ('github', models.CharField(max_length=50, null=True)),
                ('profileImage', models.ImageField(blank=True, default='user.jpg', null=True, upload_to='')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('comment_type', models.CharField(default='', max_length=100, verbose_name='type')),
                ('comment', models.TextField(default='')),
                ('contentType', models.CharField(choices=[('text/markdown', 'Markdown'), ('text/plain', 'Plain'), ('application/base64', 'Application'), ('image/png;base64', 'Image Png'), ('image/jpeg;base64', 'Image Jpeg')], default='text/plain', max_length=20)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('comment_author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL)),
                ('comment_post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='commentsSrc', to='authors.post')),
            ],
        ),
    ]
